	void glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glBindImageTextures(GLuint first, GLsizei count, const GLuint* textures) const;
	void glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) const;
	void glDeleteSamplers(GLsizei count, const GLuint* samplers) const;
	void glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint* params) const;
	void glEnableVertexArrayAttrib(GLuint vaobj, GLuint index) const;
	void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint* params) const;
	void glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* data) const;
	void glGenSamplers(GLsizei count, GLuint* samplers) const;
	void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint* params) const;
	void glGetIntegeri_v(GLenum target, GLuint index, GLint* data) const;
	void glTextureBarrier() const;
	void glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glDeleteTextures(GLsizei n, const GLuint* textures) const;
	void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint* params) const;
	void glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level) const;
	void glVertexAttribL4dv(GLuint index, const GLdouble* v) const;
	void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, void* binary) const;
	void glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width) const;
	void glGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat* values) const;
	void glGetNamedBufferPointerv(GLuint buffer, GLenum pname, void ** params) const;
	void glDrawElementsIndirect(GLenum mode, GLenum type, const void* indirect) const;
	void glSecondaryColorP3ui(GLenum type, GLuint color) const;
	void glBeginQueryIndexed(GLenum target, GLuint index, GLuint id) const;
	void glBindFramebuffer(GLenum target, GLuint framebuffer) const;
	void glGetTexParameteriv(GLenum target, GLenum pname, GLint* params) const;
	void glVertexAttrib3dv(GLuint index, const GLdouble* v) const;
	void glUniform1f(GLint location, GLfloat v0) const;
	void glVertexAttribI3uiv(GLuint index, const GLuint* v) const;
	void glUniform1uiv(GLint location, GLsizei count, const GLuint* value) const;
	void glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64* params) const;
	void glTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint* params) const;
	void glTexCoordP3ui(GLenum type, GLuint coords) const;
	void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint* params) const;
	void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) const;
	void glScissor(GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glUniform3iv(GLint location, GLsizei count, const GLint* value) const;
	GLboolean glIsProgram(GLuint program) const;
	void* glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) const;
	void glTexCoordP1ui(GLenum type, GLuint coords) const;
	void glPauseTransformFeedback() const;
	void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1) const;
	void glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint* params) const;
	void glNamedBufferData(GLuint buffer, GLsizeiptr size, const void* data, GLenum usage) const;
	GLenum glCheckFramebufferStatus(GLenum target) const;
	void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) const;
	void glAttachShader(GLuint program, GLuint shader) const;
	void glUniform1d(GLint location, GLdouble x) const;
	void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint* params) const;
	void glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) const;
	void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha) const;
	void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint* length) const;
	void glGenProgramPipelines(GLsizei n, GLuint* pipelines) const;
	void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source) const;
	void glFramebufferParameteri(GLenum target, GLenum pname, GLint param) const;
	void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices) const;
	void glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) const;
	void glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth) const;
	void glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint* params) const;
	void glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum* bufs) const;
	void glPixelStoref(GLenum pname, GLfloat param) const;
	void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) const;
	void glBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint* buffers, const GLintptr* offsets, const GLsizeiptr* sizes) const;
	void glVertexP2uiv(GLenum type, const GLuint* value) const;
	void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3) const;
	void glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) const;
	void glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void* pixels) const;
	void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount) const;
	void glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glGetFloatv(GLenum pname, GLfloat* data) const;
	void glUniform2uiv(GLint location, GLsizei count, const GLuint* value) const;
	void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat* val) const;
	void glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value) const;
	void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glReadBuffer(GLenum src) const;
	void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint* params) const;
	void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) const;
	void glStencilMask(GLuint mask) const;
	void glGetDoublev(GLenum pname, GLdouble* data) const;
	void glProgramUniform1d(GLuint program, GLint location, GLdouble v0) const;
	void glVertexP4uiv(GLenum type, const GLuint* value) const;
	void glPolygonMode(GLenum face, GLenum mode) const;
	void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) const;
	void glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h) const;
	void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) const;
	void glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer) const;
	void glCullFace(GLenum mode) const;
	void glTexParameteri(GLenum target, GLenum pname, GLint param) const;
	void glVertexAttrib3fv(GLuint index, const GLfloat* v) const;
	void glPointParameterf(GLenum pname, GLfloat param) const;
	void glVertexAttrib2fv(GLuint index, const GLfloat* v) const;
	void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat* params) const;
	void glVertexAttrib3sv(GLuint index, const GLshort* v) const;
	void glTextureParameterIiv(GLuint texture, GLenum pname, const GLint* params) const;
	GLboolean glIsFramebuffer(GLuint framebuffer) const;
	void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint* param) const;
	void glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount) const;
	void glUniform3fv(GLint location, GLsizei count, const GLfloat* value) const;
	void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer) const;
	void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) const;
	void glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels) const;
	void glDrawBuffers(GLsizei n, const GLenum* bufs) const;
	void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance) const;
	void glGenRenderbuffers(GLsizei n, GLuint* renderbuffers) const;
	void glClearStencil(GLint s) const;
	void glBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint* buffers) const;
	void glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value) const;
	void glViewportIndexedfv(GLuint index, const GLfloat* v) const;
	void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask) const;
	void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glBindAttribLocation(GLuint program, GLuint index, const GLchar* name) const;
	void glVertexAttrib1f(GLuint index, GLfloat x) const;
	void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum* attachments) const;
	GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar* name) const;
	void glDeleteProgramPipelines(GLsizei n, const GLuint* pipelines) const;
	void glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z) const;
	void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint* value) const;
	void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat* param) const;
	void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName) const;
	GLboolean glIsTransformFeedback(GLuint id) const;
	void glPopDebugGroup() const;
	void glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void* pixels) const;
	void glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) const;
	void glBufferStorage(GLenum target, GLsizeiptr size, const void* data, GLbitfield flags) const;
	void glPolygonOffset(GLfloat factor, GLfloat units) const;
	void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat* params) const;
	void glClear(GLbitfield mask) const;
	void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) const;
	void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) const;
	void glVertexAttribDivisor(GLuint index, GLuint divisor) const;
	void glVertexP2ui(GLenum type, GLuint value) const;
	void glCreateFramebuffers(GLsizei n, GLuint* framebuffers) const;
	void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) const;
	void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values) const;
	void glVertexAttribI4ubv(GLuint index, const GLubyte* v) const;
	void glVertexAttrib4iv(GLuint index, const GLint* v) const;
	void glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint* indices) const;
	void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex) const;
	void glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble* params) const;
	void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name) const;
	void glPointParameteriv(GLenum pname, const GLint* params) const;
	void glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint* values) const;
	void glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glVertexAttribL3dv(GLuint index, const GLdouble* v) const;
	void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program) const;
	void glClampColor(GLenum target, GLenum clamp) const;
	void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat* value) const;
	GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings) const;
	void glGetBooleanv(GLenum pname, GLboolean* data) const;
	void glVertexAttrib4Nsv(GLuint index, const GLshort* v) const;
	void glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) const;
	void glBindTextureUnit(GLuint unit, GLuint texture) const;
	void glGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble* v) const;
	void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64* params) const;
	void glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex) const;
	void glDeleteProgram(GLuint program) const;
	GLboolean glIsSampler(GLuint sampler) const;
	void glGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint* values) const;
	void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data) const;
	void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void* data) const;
	void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) const;
	void glVertexAttrib4Nuiv(GLuint index, const GLuint* v) const;
	void glLineWidth(GLfloat width) const;
	GLenum glGetGraphicsResetStatus() const;
	void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format) const;
	void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) const;
	void* glMapBuffer(GLenum target, GLenum access) const;
	void glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void* pixels) const;
	void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data) const;
	void glGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values) const;
	void glPatchParameteri(GLenum pname, GLint value) const;
	GLboolean glIsEnabledi(GLenum target, GLuint index) const;
	void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void* data) const;
	GLuint glGetUniformBlockIndex(GLuint program, const GLchar* uniformBlockName) const;
	void glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble* params) const;
	void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) const;
	void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) const;
	GLboolean glIsVertexArray(GLuint array) const;
	void glEnableVertexAttribArray(GLuint index) const;
	void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2) const;
	void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z) const;
	void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params) const;
	void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices, GLint basevertex) const;
	void glUniform1dv(GLint location, GLsizei count, const GLdouble* value) const;
	void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLint basevertex) const;
	void glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void* pixels) const;
	void glVertexAttrib1s(GLuint index, GLshort x) const;
	void glValidateProgram(GLuint program) const;
	void glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src) const;
	void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y) const;
	void glVertexAttrib4sv(GLuint index, const GLshort* v) const;
	void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer) const;
	void glGetnPolygonStipple(GLsizei bufSize, GLubyte* pattern) const;
	void glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2) const;
	void glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) const;
	void glTexCoordP3uiv(GLenum type, const GLuint* coords) const;
	void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint* value) const;
	void glProgramParameteri(GLuint program, GLenum pname, GLint value) const;
	void glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLuint baseinstance) const;
	void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1) const;
	void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat* params) const;
	void glGetProgramiv(GLuint program, GLenum pname, GLint* params) const;
	void glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* pixels) const;
	void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1) const;
	void glGetTextureParameteriv(GLuint texture, GLenum pname, GLint* params) const;
	void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z) const;
	void glShaderBinary(GLsizei count, const GLuint* shaders, GLenum binaryformat, const void* binary, GLsizei length) const;
	void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint* value) const;
	void glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height) const;
	void glGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint* v) const;
	void glDeleteFramebuffers(GLsizei n, const GLuint* framebuffers) const;
	void glPixelStorei(GLenum pname, GLint param) const;
	void glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void* data) const;
	void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision) const;
	GLboolean glIsBuffer(GLuint buffer) const;
	void glEndQuery(GLenum target) const;
	void glGetTexParameterIiv(GLenum target, GLenum pname, GLint* params) const;
	void glHint(GLenum target, GLenum mode) const;
	void glColorP3ui(GLenum type, GLuint color) const;
	void glClearDepth(GLdouble depth) const;
	void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2) const;
	void glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint* param) const;
	GLboolean glIsRenderbuffer(GLuint renderbuffer) const;
	void glGetFloati_v(GLenum target, GLuint index, GLfloat* data) const;
	void glGetCompressedTexImage(GLenum target, GLint level, void* img) const;
	void glTexCoordP2uiv(GLenum type, const GLuint* coords) const;
	void glVertexAttribI4bv(GLuint index, const GLbyte* v) const;
	void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2) const;
	void glDrawArraysIndirect(GLenum mode, const void* indirect) const;
	void glUniform2d(GLint location, GLdouble x, GLdouble y) const;
	GLboolean glUnmapBuffer(GLenum target) const;
	void glVertexAttrib4usv(GLuint index, const GLushort* v) const;
	void glGetBufferParameteriv(GLenum target, GLenum pname, GLint* params) const;
	void glBindProgramPipeline(GLuint pipeline) const;
	void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels) const;
	void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer) const;
	void glScissorArrayv(GLuint first, GLsizei count, const GLint* v) const;
	void glTextureParameteri(GLuint texture, GLenum pname, GLint param) const;
	void glTexParameteriv(GLenum target, GLenum pname, const GLint* params) const;
	void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params) const;
	void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glDepthMask(GLboolean flag) const;
	void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) const;
	void glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glTexParameterf(GLenum target, GLenum pname, GLfloat param) const;
	void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint* params) const;
	void glVertexAttrib4Nubv(GLuint index, const GLubyte* v) const;
	void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha) const;
	void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data) const;
	void glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* pixels) const;
	void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) const;
	void glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels) const;
	void glGenTransformFeedbacks(GLsizei n, GLuint* ids) const;
	void glUniform3uiv(GLint location, GLsizei count, const GLuint* value) const;
	void glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint* params) const;
	void glDisablei(GLenum target, GLuint index) const;
	void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint* params) const;
	void glSampleCoverage(GLfloat value, GLboolean invert) const;
	void glDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble* v) const;
	void glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint* value) const;
	void glBeginTransformFeedback(GLenum primitiveMode) const;
	void glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf) const;
	void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint* ids, GLboolean enabled) const;
	void glPointParameterfv(GLenum pname, const GLfloat* params) const;
	void glCreateVertexArrays(GLsizei n, GLuint* arrays) const;
	void glActiveTexture(GLenum texture) const;
	void glUniform2i(GLint location, GLint v0, GLint v1) const;
	void glUniform1i(GLint location, GLint v0) const;
	void glBeginConditionalRender(GLuint id, GLenum mode) const;
	void glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length) const;
	void glVertexAttrib1fv(GLuint index, const GLfloat* v) const;
	void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) const;
	void glTexCoordP4ui(GLenum type, GLuint coords) const;
	void glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void* data) const;
	void glVertexAttribL1dv(GLuint index, const GLdouble* v) const;
	void glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) const;
	void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint* params) const;
	void glGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* image) const;
	void glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64* params) const;
	GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) const;
	void glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z) const;
	void glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble* value) const;
	void glUseProgram(GLuint program) const;
	void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog) const;
	void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) const;
	void glVertexAttribI2i(GLuint index, GLint x, GLint y) const;
	void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint* value) const;
	void glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint* value) const;
	void glBufferData(GLenum target, GLsizeiptr size, const void* data, GLenum usage) const;
	void glDetachShader(GLuint program, GLuint shader) const;
	void glDrawArrays(GLenum mode, GLint first, GLsizei count) const;
	void glSecondaryColorP3uiv(GLenum type, const GLuint* color) const;
	void glBindTexture(GLenum target, GLuint texture) const;
	void glUniform4uiv(GLint location, GLsizei count, const GLuint* value) const;
	void glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble* value) const;
	void glGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort* values) const;
	void glNormalP3ui(GLenum type, GLuint coords) const;
	void glDrawTransformFeedback(GLenum mode, GLuint id) const;
	void glSampleMaski(GLuint maskNumber, GLbitfield mask) const;
	void glFlush() const;
	void glMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint* coords) const;
	void glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data) const;
	void glBeginQuery(GLenum target, GLuint id) const;
	void glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w) const;
	void glEndQueryIndexed(GLenum target, GLuint index) const;
	void glGenQueries(GLsizei n, GLuint* ids) const;
	void glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint* param) const;
	void glVertexAttrib4bv(GLuint index, const GLbyte* v) const;
	void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data) const;
	void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat* value) const;
	GLboolean glIsEnabled(GLenum cap) const;
	void glVertexAttribI3iv(GLuint index, const GLint* v) const;
	void glGenVertexArrays(GLsizei n, GLuint* arrays) const;
	void glPatchParameterfv(GLenum pname, const GLfloat* values) const;
	void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) const;
	void glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3) const;
	void glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint* params) const;
	void glVertexAttrib1dv(GLuint index, const GLdouble* v) const;
	void glVertexAttribI2uiv(GLuint index, const GLuint* v) const;
	void glVertexAttribI1uiv(GLuint index, const GLuint* v) const;
	void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void* data) const;
	void glGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat* v) const;
	void glGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* table) const;
	void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glUniform3dv(GLint location, GLsizei count, const GLdouble* value) const;
	void glBlendFunc(GLenum sfactor, GLenum dfactor) const;
	void glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords) const;
	void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z) const;
	void glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) const;
	void glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) const;
	void glClipControl(GLenum origin, GLenum depth) const;
	void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels) const;
	void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint* value) const;
	void glUniform1iv(GLint location, GLsizei count, const GLint* value) const;
	void glGetUniformdv(GLuint program, GLint location, GLdouble* params) const;
	GLboolean glIsQuery(GLuint id) const;
	void glBindTransformFeedback(GLenum target, GLuint id) const;
	void glProgramUniform1i(GLuint program, GLint location, GLint v0) const;
	void glGenBuffers(GLsizei n, GLuint* buffers) const;
	void glCreateBuffers(GLsizei n, GLuint* buffers) const;
	void glMultiDrawArrays(GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount) const;
	void glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) const;
	void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) const;
	void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint* params) const;
	void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) const;
	void glBindFragDataLocation(GLuint program, GLuint color, const GLchar* name) const;
	void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name) const;
	void glBindSampler(GLuint unit, GLuint sampler) const;
	GLboolean glUnmapNamedBuffer(GLuint buffer) const;
	void glGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void* row, GLsizei columnBufSize, void* column, void* span) const;
	void glGetInteger64i_v(GLenum target, GLuint index, GLint64* data) const;
	void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level) const;
	void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint* uniformIndices) const;
	void glMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint* coords) const;
	void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar* infoLog) const;
	GLuint glCreateShader(GLenum type) const;
	void glVertexAttrib4uiv(GLuint index, const GLuint* v) const;
	void glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei* count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint* basevertex) const;
	void glGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values) const;
	void glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint* params) const;
	void glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) const;
	void glDisableVertexAttribArray(GLuint index) const;
	void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum* props, GLsizei bufSize, GLsizei* length, GLint* params) const;
	void glCreateRenderbuffers(GLsizei n, GLuint* renderbuffers) const;
	void glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor) const;
	void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) const;
	void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat* params) const;
	void glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) const;
	void glStencilFunc(GLenum func, GLint ref, GLuint mask) const;
	void glGenTextures(GLsizei n, GLuint* textures) const;
	void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) const;
	void glColorP4ui(GLenum type, GLuint color) const;
	void glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount) const;
	void glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64* param) const;
	void glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords) const;
	void glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value) const;
	GLint glGetFragDataIndex(GLuint program, const GLchar* name) const;
	void glEndConditionalRender() const;
	void glReleaseShaderCompiler() const;
	void glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) const;
	void glBlendEquation(GLenum mode) const;
	void glUniform4fv(GLint location, GLsizei count, const GLfloat* value) const;
	void glEndTransformFeedback() const;
	void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat* value) const;
	void glColorP3uiv(GLenum type, const GLuint* color) const;
	void glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords) const;
	void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data) const;
	void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) const;
	void glUniform2dv(GLint location, GLsizei count, const GLdouble* value) const;
	void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) const;
	void glTextureParameterfv(GLuint texture, GLenum pname, const GLfloat* param) const;
	void glDeleteVertexArrays(GLsizei n, const GLuint* arrays) const;
	void glBlendEquationi(GLuint buf, GLenum mode) const;
	void glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer) const;
	void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders) const;
	void glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar* label) const;
	void glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void* data) const;
	void* glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access) const;
	GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog) const;
	void glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) const;
	void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glMinSampleShading(GLfloat value) const;
	void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) const;
	void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels) const;
	void glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance) const;
	void glCreateSamplers(GLsizei n, GLuint* samplers) const;
	void glResumeTransformFeedback() const;
	void glVertexAttrib1d(GLuint index, GLdouble x) const;
	void glGetDoublei_v(GLenum target, GLuint index, GLdouble* data) const;
	void glDeleteBuffers(GLsizei n, const GLuint* buffers) const;
	void glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y) const;
	void glGetInteger64v(GLenum pname, GLint64* data) const;
	void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) const;
	void glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint* param) const;
	void glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height) const;
	void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass) const;
	GLboolean glIsShader(GLuint shader) const;
	void glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) const;
	void glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint* param) const;
	void glFrontFace(GLenum mode) const;
	void glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64* param) const;
	void glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) const;
	void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) const;
	void glMultiDrawElements(GLenum mode, const GLsizei* count, GLenum type, const void *const* indices, GLsizei drawcount) const;
	void glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding) const;
	void glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void* indices, GLint basevertex) const;
	void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode) const;
	void glDisableVertexArrayAttrib(GLuint vaobj, GLuint index) const;
	void glGetUniformfv(GLuint program, GLint location, GLfloat* params) const;
	void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void* pixels) const;
	const GLubyte* glGetStringi(GLenum name, GLuint index) const;
	void glClearDepthf(GLfloat d) const;
	void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glDispatchComputeIndirect(GLintptr indirect) const;
	void glProgramUniform1ui(GLuint program, GLint location, GLuint v0) const;
	void glMemoryBarrierByRegion(GLbitfield barriers) const;
	void glTextureParameterf(GLuint texture, GLenum pname, GLfloat param) const;
	void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) const;
	void glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble* params) const;
	GLenum glCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target) const;
	void glMultiDrawArraysIndirect(GLenum mode, const void* indirect, GLsizei drawcount, GLsizei stride) const;
	void glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) const;
	void glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value) const;
	void glMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint* coords) const;
	void glUniform2f(GLint location, GLfloat v0, GLfloat v1) const;
	void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2) const;
	void glBindRenderbuffer(GLenum target, GLuint renderbuffer) const;
	void glMemoryBarrier(GLbitfield barriers) const;
	void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) const;
	void glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data) const;
	void glPrimitiveRestartIndex(GLuint index) const;
	GLuint glGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar* name) const;
	void glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer) const;
	void glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum* attachments) const;
	void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels) const;
	void glVertexAttrib2dv(GLuint index, const GLdouble* v) const;
	GLuint glCreateProgram() const;
	GLint glGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar* name) const;
	void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint* params) const;
	void glGetBufferPointerv(GLenum target, GLenum pname, void ** params) const;
	void glVertexAttrib1sv(GLuint index, const GLshort* v) const;
	void glVertexAttribI1iv(GLuint index, const GLint* v) const;
	void glNormalP3uiv(GLenum type, const GLuint* coords) const;
	void glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glVertexP4ui(GLenum type, GLuint value) const;
	GLboolean glIsTexture(GLuint texture) const;
	void glUniform2fv(GLint location, GLsizei count, const GLfloat* value) const;
	void glGetBooleani_v(GLenum target, GLuint index, GLboolean* data) const;
	GLint glGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar* name) const;
	void glVertexP3ui(GLenum type, GLuint value) const;
	void glEnable(GLenum cap) const;
	void glInvalidateTexImage(GLuint texture, GLint level) const;
	void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels) const;
	void glDeleteSync(GLsync sync) const;
	void glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f) const;
	void glStencilMaskSeparate(GLenum face, GLuint mask) const;
	GLint glGetFragDataLocation(GLuint program, const GLchar* name) const;
	void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2) const;
	void glGetVertexAttribiv(GLuint index, GLenum pname, GLint* params) const;
	void glFinish() const;
	void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer) const;
	void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat* value) const;
	void glCreateProgramPipelines(GLsizei n, GLuint* pipelines) const;
	void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z) const;
	void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) const;
	void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z) const;
	void glGetQueryObjectiv(GLuint id, GLenum pname, GLint* params) const;
	void glDeleteRenderbuffers(GLsizei n, const GLuint* renderbuffers) const;
	void glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void* data) const;
	void glVertexAttribI4uiv(GLuint index, const GLuint* v) const;
	void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint* value) const;
	void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar* message) const;
	void glBindSamplers(GLuint first, GLsizei count, const GLuint* samplers) const;
	void glVertexP3uiv(GLenum type, const GLuint* value) const;
	void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params) const;
	void glQueryCounter(GLuint id, GLenum target) const;
	void glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream) const;
	void glBlendFunci(GLuint buf, GLenum src, GLenum dst) const;
	void glDeleteShader(GLuint shader) const;
	void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y) const;
	void glProgramBinary(GLuint program, GLenum binaryFormat, const void* binary, GLsizei length) const;
	void glLinkProgram(GLuint program) const;
	void glProgramUniform1f(GLuint program, GLint location, GLfloat v0) const;
	void glPointSize(GLfloat size) const;
	void glGenerateMipmap(GLenum target) const;
	void glCreateTextures(GLenum target, GLsizei n, GLuint* textures) const;
	void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) const;
	GLenum glGetError() const;
	void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glVertexAttrib4Niv(GLuint index, const GLint* v) const;
	void glDeleteTransformFeedbacks(GLsizei n, const GLuint* ids) const;
	void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels) const;
	void glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) const;
	void glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data) const;
	void glUniform4iv(GLint location, GLsizei count, const GLint* value) const;
	void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z) const;
	void glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint* params) const;
	void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) const;
	void glEnablei(GLenum target, GLuint index) const;
	void glGenerateTextureMipmap(GLuint texture) const;
	void glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) const;
	GLboolean glIsSync(GLsync sync) const;
	void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint* value) const;
	void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) const;
	void glUniform1fv(GLint location, GLsizei count, const GLfloat* value) const;
	void glViewportArrayv(GLuint first, GLsizei count, const GLfloat* v) const;
	GLboolean glIsProgramPipeline(GLuint pipeline) const;
	void glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer) const;
	void glVertexAttribI4usv(GLuint index, const GLushort* v) const;
	void glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) const;
	void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint* params) const;
	void glGetUniformuiv(GLuint program, GLint location, GLuint* params) const;
	void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint* value) const;
	void glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint* values) const;
	void glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1) const;
	void glValidateProgramPipeline(GLuint pipeline) const;
	void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) const;
	void glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords) const;
	void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) const;
	void glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint* params) const;
	void glTexCoordP1uiv(GLenum type, const GLuint* coords) const;
	void glTexParameterIiv(GLenum target, GLenum pname, const GLint* params) const;
	void glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) const;
	void glUniform1ui(GLint location, GLuint v0) const;
	void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) const;
	void glDeleteQueries(GLsizei n, const GLuint* ids) const;
	void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint* param) const;
	void glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64* params) const;
	void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param) const;
	void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data) const;
	void glDepthRangef(GLfloat n, GLfloat f) const;
	void glBindBufferBase(GLenum target, GLuint index, GLuint buffer) const;
	void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void* indices) const;
	void glVertexAttrib4ubv(GLuint index, const GLubyte* v) const;
	void glVertexAttribI1ui(GLuint index, GLuint x) const;
	void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) const;
	void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) const;
	void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels) const;
	void glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) const;
	void glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) const;
	void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length) const;
	void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glVertexAttribL1d(GLuint index, GLdouble x) const;
	void glScissorIndexedv(GLuint index, const GLint* v) const;
	void glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble* value) const;
	void glVertexAttribI4iv(GLuint index, const GLint* v) const;
	void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble* value) const;
	void glGetIntegerv(GLenum pname, GLint* data) const;
	void glCreateQueries(GLenum target, GLsizei n, GLuint* ids) const;
	void glCompileShader(GLuint shader) const;
	void glUniform2iv(GLint location, GLsizei count, const GLint* value) const;
	void glInvalidateBufferData(GLuint buffer) const;
	void glGetQueryiv(GLenum target, GLenum pname, GLint* params) const;
	void glGetUniformiv(GLuint program, GLint location, GLint* params) const;
	void glVertexAttrib2s(GLuint index, GLshort x, GLshort y) const;
	void glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat* params) const;
	void glLogicOp(GLenum opcode) const;
	void glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) const;
	void glVertexAttrib4dv(GLuint index, const GLdouble* v) const;
	void glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void* data, GLbitfield flags) const;
	void glProvokingVertex(GLenum mode) const;
	void glGetObjectPtrLabel(const void* ptr, GLsizei bufSize, GLsizei* length, GLchar* label) const;
	void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat* value) const;
	void glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glVertexAttrib4Nusv(GLuint index, const GLushort* v) const;
	void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat* params) const;
	void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glBindVertexArray(GLuint array) const;
	void glMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint* coords) const;
	void glBindTextures(GLuint first, GLsizei count, const GLuint* textures) const;
	void glDebugMessageCallback(GLDEBUGPROC callback, const void* userParam) const;
	void glVertexAttrib2sv(GLuint index, const GLshort* v) const;
	void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint* params) const;
	void glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64* params) const;
	void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint* value) const;
	void glPointParameteri(GLenum pname, GLint param) const;
	void glGetPointerv(GLenum pname, void ** params) const;
	void glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint* buffers, const GLintptr* offsets, const GLsizei* strides) const;
	void glTexCoordP4uiv(GLenum type, const GLuint* coords) const;
	void glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint* param) const;
	void glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void* data) const;
	GLint glGetAttribLocation(GLuint program, const GLchar* name) const;
	void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param) const;
	void glCreateTransformFeedbacks(GLsizei n, GLuint* ids) const;
	void glVertexAttribI2iv(GLuint index, const GLint* v) const;
	void glUniform4dv(GLint location, GLsizei count, const GLdouble* value) const;
	void glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) const;
	void glVertexAttrib4fv(GLuint index, const GLfloat* v) const;
	void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) const;
	void glDisable(GLenum cap) const;
	void glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void* data) const;
	void glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param) const;
	void glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint* param) const;
	void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) const;
	void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog) const;
	void glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name) const;
	void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor) const;
	void glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels) const;
	void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) const;
	void glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) const;
	void glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar* name) const;
	void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, GLchar* label) const;
	GLsync glFenceSync(GLenum condition, GLbitfield flags) const;
	void glDepthFunc(GLenum func) const;
	void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) const;
	void glObjectPtrLabel(const void* ptr, GLsizei length, const GLchar* label) const;
	void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) const;
	void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint* params) const;
	void glVertexAttribL2dv(GLuint index, const GLdouble* v) const;
	void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount) const;
	void glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset) const;
	void glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar* name) const;
	GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar* name) const;
	void glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer) const;
	void glVertexAttribI1i(GLuint index, GLint x) const;
	void glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value) const;
	void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName) const;
	void glUniform2ui(GLint location, GLuint v0, GLuint v1) const;
	GLint glGetUniformLocation(GLuint program, const GLchar* name) const;
	void glTexParameterfv(GLenum target, GLenum pname, const GLfloat* params) const;
	void glVertexAttribI4sv(GLuint index, const GLshort* v) const;
	void glDepthRange(GLdouble near, GLdouble far) const;
	void glGetShaderiv(GLuint shader, GLenum pname, GLint* params) const;
	void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params) const;
	void glTextureParameteriv(GLuint texture, GLenum pname, const GLint* param) const;
	void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) const;
	void glGenFramebuffers(GLsizei n, GLuint* framebuffers) const;
	void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat* value) const;
	void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w) const;
	void glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length) const;
	void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y) const;
	void glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value) const;
	void glActiveShaderProgram(GLuint pipeline, GLuint program) const;
	void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name) const;
	void glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint* params) const;
	void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint* value) const;
	void glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat* params) const;
	void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* buf) const;
	void glMultiDrawElementsIndirect(GLenum mode, GLenum type, const void* indirect, GLsizei drawcount, GLsizei stride) const;
	void glDrawBuffer(GLenum buf) const;
	void glColorP4uiv(GLenum type, const GLuint* color) const;
	void glVertexAttrib4Nbv(GLuint index, const GLbyte* v) const;
	void glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar* name) const;
	void* glMapNamedBuffer(GLuint buffer, GLenum access) const;
	void glBindVertexBuffers(GLuint first, GLsizei count, const GLuint* buffers, const GLintptr* offsets, const GLsizei* strides) const;
	void glBindBuffer(GLenum target, GLuint buffer) const;
	void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data) const;
	const GLubyte* glGetString(GLenum name) const;
	void glViewport(GLint x, GLint y, GLsizei width, GLsizei height) const;
	void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint* params) const;
	void glTexCoordP2ui(GLenum type, GLuint coords) const;
